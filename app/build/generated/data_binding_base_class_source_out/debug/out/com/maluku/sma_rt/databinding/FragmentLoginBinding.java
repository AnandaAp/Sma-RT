// Generated by view binder compiler. Do not edit!
package com.maluku.sma_rt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.maluku.sma_rt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnrt;

  @NonNull
  public final Button btnwarga;

  @NonNull
  public final RelativeLayout containersec;

  @NonNull
  public final ImageView logosmart;

  @NonNull
  public final ImageView logowelcome;

  private FragmentLoginBinding(@NonNull LinearLayout rootView, @NonNull Button btnrt,
      @NonNull Button btnwarga, @NonNull RelativeLayout containersec, @NonNull ImageView logosmart,
      @NonNull ImageView logowelcome) {
    this.rootView = rootView;
    this.btnrt = btnrt;
    this.btnwarga = btnwarga;
    this.containersec = containersec;
    this.logosmart = logosmart;
    this.logowelcome = logowelcome;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnrt;
      Button btnrt = ViewBindings.findChildViewById(rootView, id);
      if (btnrt == null) {
        break missingId;
      }

      id = R.id.btnwarga;
      Button btnwarga = ViewBindings.findChildViewById(rootView, id);
      if (btnwarga == null) {
        break missingId;
      }

      id = R.id.containersec;
      RelativeLayout containersec = ViewBindings.findChildViewById(rootView, id);
      if (containersec == null) {
        break missingId;
      }

      id = R.id.logosmart;
      ImageView logosmart = ViewBindings.findChildViewById(rootView, id);
      if (logosmart == null) {
        break missingId;
      }

      id = R.id.logowelcome;
      ImageView logowelcome = ViewBindings.findChildViewById(rootView, id);
      if (logowelcome == null) {
        break missingId;
      }

      return new FragmentLoginBinding((LinearLayout) rootView, btnrt, btnwarga, containersec,
          logosmart, logowelcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
